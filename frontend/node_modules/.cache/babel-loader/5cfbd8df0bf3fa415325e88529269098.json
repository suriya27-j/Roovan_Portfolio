{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SURIYA MANO\\\\Desktop\\\\Roovan_Portfolio\\\\frontend\\\\src\\\\Pages\\\\Projects.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport Project from \"../Components/Project\";\nimport { displayedProjectDetails } from \"../Details\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Projects() {\n  _s();\n\n  const [projects, setProjects] = useState([displayedProjectDetails]);\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/show_projects');\n        const data = await response.json();\n        setProjects(data);\n      } catch (error) {\n        console.error('Error fetching data:', error); // Handle error if needed\n      }\n    };\n\n    fetchProjects();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container mx-auto max-width pt-10 mb-20\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl text-dark-heading dark:text-light-heading md:text-4xl xl:text-5xl xl:leading-tight font-bold\",\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-10\",\n        children: projects && projects.map((project, index) => /*#__PURE__*/_jsxDEV(Project, {\n          projectTitle: project.projectTitle,\n          image: project.image,\n          description: project.description,\n          techStack: project.techstack,\n          gitlink: project.gitlink\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Projects, \"PAj/dujuIPhL0qYaO3lqH/XHy3o=\");\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useEffect","useState","Project","displayedProjectDetails","Projects","projects","setProjects","fetchProjects","response","fetch","data","json","error","console","map","project","index","projectTitle","image","description","techstack","gitlink"],"sources":["C:/Users/SURIYA MANO/Desktop/Roovan_Portfolio/frontend/src/Pages/Projects.js"],"sourcesContent":["import {React,useEffect,useState} from \"react\";\nimport Project from \"../Components/Project\";\nimport { displayedProjectDetails } from \"../Details\";\n\nfunction Projects() {\n  const [projects, setProjects] = useState([displayedProjectDetails]);\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/show_projects');\n        const data = await response.json();\n        setProjects(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        // Handle error if needed\n      }\n    };\n\n    fetchProjects();\n  }, []);\n  return (\n    <main className=\"container mx-auto max-width pt-10 mb-20\">\n      <section>\n        <h1 className=\"text-2xl text-dark-heading dark:text-light-heading md:text-4xl xl:text-5xl xl:leading-tight font-bold\">\n          Projects\n        </h1>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-10\">\n          {projects && projects.map((project, index) => (\n            <Project\n              key={index}\n              projectTitle={project.projectTitle}\n              image={project.image}\n              description={project.description}\n              techStack={project.techstack}\n              gitlink={project.gitlink}\n            />\n          ))}\n        </div>\n      </section>\n    </main>\n  );\n}\n\n\nexport default Projects;"],"mappings":";;;AAAA,SAAQA,KAAR,EAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,uBAAT,QAAwC,YAAxC;;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EAClB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,CAACE,uBAAD,CAAD,CAAxC;EAEAH,SAAS,CAAC,MAAM;IACd,MAAMO,aAAa,GAAG,YAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAD,CAA5B;QACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;QACAL,WAAW,CAACI,IAAD,CAAX;MACD,CAJD,CAIE,OAAOE,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC,EADc,CAEd;MACD;IACF,CATD;;IAWAL,aAAa;EACd,CAbQ,EAaN,EAbM,CAAT;EAcA,oBACE;IAAM,SAAS,EAAC,yCAAhB;IAAA,uBACE;MAAA,wBACE;QAAI,SAAS,EAAC,uGAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAK,SAAS,EAAC,yDAAf;QAAA,UACGF,QAAQ,IAAIA,QAAQ,CAACS,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,kBACxB,QAAC,OAAD;UAEE,YAAY,EAAED,OAAO,CAACE,YAFxB;UAGE,KAAK,EAAEF,OAAO,CAACG,KAHjB;UAIE,WAAW,EAAEH,OAAO,CAACI,WAJvB;UAKE,SAAS,EAAEJ,OAAO,CAACK,SALrB;UAME,OAAO,EAAEL,OAAO,CAACM;QANnB,GACOL,KADP;UAAA;UAAA;UAAA;QAAA,QADW;MADf;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD;;GAtCQZ,Q;;KAAAA,Q;AAyCT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}